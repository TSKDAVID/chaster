import os
from crewai import Agent, Task, Crew, Process, LLM
from crewai.tools import BaseTool
from pydantic import Field
from typing import Type
from crewai.tools import BaseTool
from pydantic import BaseModel, Field
import litellm
from crewai_tools import BraveSearchTool
from tools import WriteToTerminalTool

llm = LLM(
    model="llama3-70b-8192",
    base_url="https://api.groq.com/openai/v1",
    api_key="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",
)
functionllm = LLM(
    model="llama-3.2-3b-preview",
    base_url="https://api.groq.com/openai/v1",
    api_key="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",
)



dataexpert= Agent(
    role = "data sorting expert, specialised in sorting data for ai training",
    goal = """sorting received data in a format eligible for training ai in the future, need to analyze data and format it for training creating excel
    or any propriate file format for training""",
    backstory= """professional data analyst with ove 15 years of experience in training ai, best at formating data in trainable format""",
    llm=llm,
    function_calling_llm= functionllm
)
datatask = Task(
    description="""you need to analyze data stored inside resources generated by other agents in other crew, you need to take it and
     analyze it and create a format which will be eligible for training an ai, while puttin this formated data into csv or any propper
      training file """,
    expected_output="a file containing training data for an ai",
    agent=dataexpert

)
crew = Crew(
    agents=[dataexpert],
    tasks=[],
    verbose=True
)